### Important Commands ###

# Minikube CLI is used to start up/deleting the Cluster
# Kubectl CLI is used to configure minikube cluster

To start the minikube cluster.
minikube start --driver=docker --base-image=kicbase/stable:v0.0.20 --kubernetes-version v1.23.0

kubectl 1.23 
https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.13/2022-10-31/bin/windows/amd64/kubectl.exe
  

To get the status of nodes (It will tell that minikube node is ready
> kubectl get nodes
> Kubectl get all (All things that are running in cluster - POD,Services,Deployment,Replicaset)

> minikube status

To get the version of kubernetes . It will tell what is client veresion and server version of K8's
> kubectl version

## Basic Kubectl commands 

1. kubectl get nodes #It will show one node which is a minikube cluster 

2. Kubectl get pod

3. kubectl get services #It will show only one default service 

## Creating kubectl components - POD (But abstraction of pod is Deployment)

4. kubectl create deployment NAME --image=image [--dry-run] [options]

- POD will be created based on container image

### Creating NGINX Deployment and Mongo bb

> kubectl create deployment nginx-depl --image=nginx

> kubectl create deployment mongo-depl --image=mongo

5. kubectl get deployment #Get list of all deployments 

6. kubectl get pod #It will have POD which will have prefix of deployment name 

7. kubectl get replicaset
- Another layer in between Deployment and POD - Replica SET (It is automatically managed by kubernetes)It manages replicas of POD

8. kubectl edit deployment nginx-depl
- You will get auto genarated config file of deployment 
- Edit the file and save.

Older POD will get terminate , Replicaset will aslo get updated 

9. kubectl logs [podname] 

10. kubectl describe pod podname

11. kubectl exec -it podname bin/bash ## You will get container access of pod

12. Kubectl delete deployment deploymentname

### DEMO from Configuration File


#### Creating Deployment and Service 

13. kubectl apply -f filename #Take the configuration from file 

Example - kubectl apply -f config-file.yaml

Go till path where config file is available>kubectl apply -f nginx-deployment.yaml
Go till path where config file is available>kubectl apply -f nginx-service.yaml

### How can we validate that Service has Right Ports - Using Describe command
14. kubectl describe service nginx-service
- It consist of Endpoints of PODS where service will forward the request too.

### How to get the IP Address of PODS
15. kubectl get pod -o wide

### Get the STATUS Process which is auto generated by Kubernetes in YAML File 
16. kubectl get deployment nginx-deployment -o yaml > nginx_deployment_local_result.yaml

### Delete Everythin which is created by configuration file (deployment and service
17.A kubectl delete -f nginx-deployment.yaml
17.B kubectl delete -f nginx-service.yaml

############### DEMO PROJECT COMMANDS #########################

- Will create MongoDB POD with Internal Service 
- Will create MongoExpress POD with External Service 

Will write all above things in Deployment.yaml of MongoExpress
- DB URL will be saved in ConfigMap
- Username and Database password will be in secret 

### STEPS 

- Create Secret.yaml
- Values of creds should be base64 encoded 

### Before create Deployment we will have create Secret.yaml because that will be refered in Deployment.yaml

18.A Path_till_File>Kubectl apply -f mongo-secret.yaml 

19.kubectl get secret

### Now we will refer above secret in deployment.yaml file 

18.B Path_till_File>Kubectl apply -f mongo.yaml 

#### If you edit something in the file . And again run the below comman. It will automatically detect the changes
> Path_till_File>Kubectl apply -f mongo.yaml

- Create ConfigMap.yaml 
- Value in Data will be actually the service name of mongo db

20.A Path_till_File>Kubectl apply -f mongo-configmap.yaml 

20.B Path_till_File>Kubectl apply -f mongo-express.yaml 

### Assigning External IP for External Service.Below command is also used to Start MongoExpress

21. minikube service mongo-express-service

### Namespaces 
22. kubectl get namespace

### Cluster Info 
23.kubectl cluster-info

### Create Namespaces 
24.kubectl create namespace my-namespace

### To get list of resources which are not bound to namespace 
25. kubectl api-resources --namespaced=false

### To get list of resources which are bound to namespace 
26. kubectl api-resources --namespaced=true

### Creating namespace when you use apply
27. kubectl apply -f mysql-configmap.yaml --namespace=my-namespace

### GET using Namepace 
28. kubectl get configmap -n my-namespace

### Kubectx or kubens Installation
https://github.com/ahmetb/kubectx#installation 

kubectx is a tool to switch between contexts (clusters) on kubectl faster.
kubens is a tool to switch between Kubernetes namespaces (and configure them for kubectl) easily.

Will install using chocolatey
C:\ProgramData\chocolatey - Add that in Env variable.

>choco install kubens kubectx

### Change Active Namespace
29. kubens my-namespace

#### INGRESS

#### How to configure ingress in your kubernetes cluster 
- You can't directly run Ingress.yaml
- You will have to install Ingress Controller 

#### Installation of Ingress Controller in Minikube
30. minikube addons enable ingress 
31. minikube tunnel


#### To check whether above Ingress controller is installed or not 
> kubectl get pod -n kube-system 

If it is not in above ns 

> kubectl get pod -n ingress-nginx


#### Setting UP Ingress for Kubernetes dashboard 

https://aquasec.com/cloud-native-academy/kubernetes-101/kubernetes-dashboard/

### Get Kubernetes-dashboard.yaml 
>kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.3.1/aio/deploy/recommended.yaml

### How to see the dashboard 

32. kubectl proxy 

Open Chrome - http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/

### Creating Admin Username

https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md

Creating admin-user.yaml file as per above docker

>kubectl apply -f dashboard-adminuser.yaml

#### You will not be able to create the token
https://docs.oracle.com/en-us/iaas/Content/ContEng/Tasks/contengstartingk8sdashboard.htm

Create admin-user-sa-token.yaml

> kubectl apply -f admin-user-sa-token.yaml
> kubectl get secret -n kubernetes-dashboard

#### Get Admin-User Token for kubernetes Dashboard 

33. kubectl describe secrets admin-user-token-d4jzk -n kubernetes-dashboard

#### Setting up Ingress

>kubectl apply -f dashboard-ingress.yaml
>kubectl get ingress -n kubernetes-dashboard

### Watch to get the IP address of ingress
34. kubectl get ingress -n kubernetes-dashboard --watch

### Describe Ingress
35. kubectl describe ingress dashboard-ingress -n kubernetes-dashboard

- Ingress Controllers: https://bit.ly/32dfHe3
- Ingress Controller Bare Metal: https://bit.ly/3kYdmLB

### HELM 

- Helm hub: https://hub.helm.sh/
- Helm charts GitHub Project: https://github.com/helm/charts
- Install Helm: https://helm.sh/docs/intro/install/

36. helm search <keyword>
  
37. helm install <chartname>  

### Over writting values.yaml of chart with your own my-values.yaml 
38. helm install --values=my-values.yaml <chartname>

39. helm upgrade <chartname>

### If any of the revision goes wrong in HELM Chart .We can use ROLLBACK 

40. helm rollback <chartname>






































 













