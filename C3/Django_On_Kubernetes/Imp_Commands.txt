### Deploying Django Application - Kubernetes 

### Create Virtual Env 
> python -m venv venv
> cd Scripts
> activate 
> python -m pip install --upgrade pip

### Create Requirements.txt and Install 
> cd web
> pip install -r requirements.txt

### Create Django Project in web 
> django-admin startproject django_k8s .

### Creating .env File & GitIgnore File 

### Adding .env file in wsgi.py and manage.py 

### Update Django Settings for Database and Environment Variables 

Will use Database creds in Settings using .env

### Create .dockerignore in web folder 

### Create DockerFile in web folder
In DockerFile - entrypoint.sh file is refered for gunicorn

### Create entrypoint.sh file in web folder

### Creating Migration Scipt - migrate.sh in web folder 

### Docker Compose File creation in alignment with web folder
> docker compose up --build
If you do any change then you will have run above command again and again

### Change in Docker Compose File -- Dont add web service 

> docker compose up -d 

Both postgres-db and redis-db service will be seen in docker-ps .

Our Web application will run differently .

Now we will run appication in another cmd

>Disbale SSL from settings.py 

> python manage.py migrate 

> python manage.py shell

from django.conf import settings
print(settings.DB_IS_AVAIL)

### Build and Push Docker Container to Digital Ocean Container Registry 

> docker build -t registry.digitalocean.com/container-registry-lucky/django-k8s:latest -f DockerFile .\
> docker push registry.digitalocean.com/container-registry-lucky/django-k8s --all-tags

### Creating password for DJANGO_SUPERUSER

> python -c "import secrets;print(secrets.token_urlsafe(32))"

### Creating Django-Secret-key 

> python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"


### Kubernets Secrets from .ENV.PROD or .ENV 

> kubectl create secret generic django-k8s-web-prod-env --from-env-file=.env.prod

### Build and Push Docker Container Again to Digital Ocean Container Registry because kubernetes cluster and image name are same

> docker build -t registry.digitalocean.com/container-registry-lucky/django-k8s-web:latest -f DockerFile .
> docker push registry.digitalocean.com/container-registry-lucky/django-k8s-web --all-tags


### Going inside one of pod and activating env

> kubectl exec -it django-k8s-web-deployment-6f466549-gkmxw -- /bin/bash
root@django-k8s-web-deployment-6f466549-gkmxw:/app# source /opt/venv/bin/activate 